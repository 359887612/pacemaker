# 
# AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: 0\n"
"POT-Creation-Date: 2010-09-22T10:48:14\n"
"PO-Revision-Date: 2010-09-22T10:48:14\n"
"Last-Translator: Automatically generated\n"
"Language-Team: None\n"
"MIME-Version: 1.0\n"
"Content-Type: application/x-publican; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#, no-c-format
msgid "Configure STONITH"
msgstr ""

#. Tag: title
#, no-c-format
msgid "Why You Need STONITH"
msgstr ""

#. Tag: para
#, no-c-format
msgid "STONITH is an acronym for Shoot-The-Other-Node-In-The-Head and it protects your data from being corrupted by rouge nodes or concurrent access."
msgstr ""

#. Tag: para
#, no-c-format
msgid "Just because a node is unresponsive, this doesn’t mean it isn’t accessing your data. The only way to be 100% sure that your data is safe, is to use STONITH so we can be certain that the node is truly offline, before allowing the data to be accessed from another node."
msgstr ""

#. Tag: para
#, no-c-format
msgid "STONITH also has a role to play in the event that a clustered service cannot be stopped. In this case, the cluster uses STONITH to force the whole node offline, thereby making it safe to start the service elsewhere."
msgstr ""

#. Tag: title
#, no-c-format
msgid "What STONITH Device Should You Use"
msgstr ""

#. Tag: para
#, no-c-format
msgid "It is crucial that the STONITH device can allow the cluster to differentiate between a node failure and a network one."
msgstr ""

#. Tag: para
#, no-c-format
msgid "The biggest mistake people make in choosing a STONITH device is to use remote power switch (such as many onboard IMPI controllers) that shares power with the node it controls. In such cases, the cluster cannot be sure if the node is really offline, or active and suffering from a network fault."
msgstr ""

#. Tag: para
#, no-c-format
msgid "Likewise, any device that relies on the machine being active (such as SSH-based “devices” used during testing) are inappropriate."
msgstr ""

#. Tag: title
#, no-c-format
msgid "Configuring STONITH"
msgstr ""

#. Tag: para
#, no-c-format
msgid "Find the correct driver: stonith -L"
msgstr ""

#. Tag: para
#, no-c-format
msgid "Since every device is different, the parameters needed to configure it will vary. To find out the parameters required by the device: stonith -t {type} -n"
msgstr ""

#. Tag: para
#, no-c-format
msgid "Hopefully the developers chose names that make sense, if not you can query for some additional information by finding an active cluster node and running:"
msgstr ""

#. Tag: screen
#, no-c-format
msgid "lrmadmin -M stonith {type} pacemaker\n"
""
msgstr ""

#. Tag: para
#, no-c-format
msgid "The output should be XML formatted text containing additional parameter descriptions"
msgstr ""

#. Tag: para
#, no-c-format
msgid "Create a file called stonith.xml containing a primitive resource with a class of stonith, a type of {type} and a parameter for each of the values returned in step 2"
msgstr ""

#. Tag: para
#, no-c-format
msgid "Create a clone from the primitive resource if the device can shoot more than one node<emphasis> and supports multiple simultaneous connections</emphasis>."
msgstr ""

#. Tag: para
#, no-c-format
msgid "Upload it into the CIB using cibadmin: cibadmin -C -o resources --xml-file stonith.xml"
msgstr ""

#. Tag: title
#, no-c-format
msgid "Example"
msgstr ""

#. Tag: para
#, no-c-format
msgid "Assuming we have an IBM BladeCenter containing our two nodes and the management interface is active on 192.168.122.31, then we would chose the external/ibmrsa driver in step 2 and obtain the following list of parameters"
msgstr ""

#. Tag: screen
#, no-c-format
msgid "\n"
"stonith -t external/ibmrsa -n\n"
"[root@pcmk-1 ~]# <userinput>stonith -t external/ibmrsa -n</userinput>\n"
"hostname  ipaddr  userid  passwd  type\n"
""
msgstr ""

#. Tag: para
#, no-c-format
msgid "Assuming we know the username and password for the management interface, we would create a STONITH resource with the shell"
msgstr ""

#. Tag: screen
#, no-c-format
msgid "\n"
"[root@pcmk-1 ~]# <userinput>crm </userinput>\n"
"crm(live)# <userinput>cib new stonith</userinput>\n"
"INFO: stonith shadow CIB created\n"
"crm(stonith)# <userinput>configure primitive rsa-fencing stonith::external/ibmrsa \\</userinput>\n"
"<userinput>        params hostname=”pcmk-1 pcmk-2&#34; ipaddr=192.168.122.31 userid=mgmt passwd=abc123 type=ibm \\</userinput>\n"
"<userinput>        op monitor interval=&#34;60s&#34;</userinput>\n"
"crm(stonith)# <userinput>configure clone Fencing rsa-fencing</userinput>\n"
""
msgstr ""

#. Tag: para
#, no-c-format
msgid "And finally, since we disabled it earlier, we need to re-enable STONITH"
msgstr ""

#. Tag: screen
#, no-c-format
msgid "\n"
"crm(stonith)# <userinput>configure property stonith-enabled=&#34;true&#34;</userinput>\n"
"crm(stonith)# <userinput>configure show</userinput>\n"
"node pcmk-1\n"
"node pcmk-2\n"
"primitive WebData ocf:linbit:drbd \\\n"
"        params drbd_resource=&#34;wwwdata&#34; \\\n"
"        op monitor interval=&#34;60s&#34;\n"
"primitive WebFS ocf:heartbeat:Filesystem \\\n"
"        params device=&#34;/dev/drbd/by-res/wwwdata&#34; directory=&#34;/var/www/html&#34; fstype=”gfs2”\n"
"primitive WebSite ocf:heartbeat:apache \\\n"
"        params configfile=&#34;/etc/httpd/conf/httpd.conf&#34; \\\n"
"        op monitor interval=&#34;1min&#34;\n"
"primitive ClusterIP ocf:heartbeat:IPaddr2 \\\n"
"        params ip=”192.168.122.101” cidr_netmask=”32” clusterip_hash=”sourceip” \\\n"
"        op monitor interval=&#34;30s&#34;\n"
"primitive dlm ocf:pacemaker:controld \\\n"
"        op monitor interval=&#34;120s&#34;\n"
"primitive gfs-control ocf:pacemaker:controld \\\n"
"   params daemon=”gfs_controld.pcmk” args=”-g 0” \\\n"
"        op monitor interval=&#34;120s&#34;\n"
"<emphasis>primitive rsa-fencing stonith::external/ibmrsa \\</emphasis>\n"
"<emphasis> params hostname=”pcmk-1 pcmk-2&#34; ipaddr=192.168.122.31 userid=mgmt passwd=abc123 type=ibm \\</emphasis>\n"
"<emphasis> op monitor interval=&#34;60s&#34;</emphasis>\n"
"ms WebDataClone WebData \\\n"
"        meta master-max=&#34;2&#34; master-node-max=&#34;1&#34; clone-max=&#34;2&#34; clone-node-max=&#34;1&#34; notify=&#34;true&#34;\n"
"<emphasis>clone Fencing rsa-fencing </emphasis>\n"
"clone WebFSClone WebFS\n"
"clone WebIP ClusterIP  \\\n"
"        meta globally-unique=”true” clone-max=”2” clone-node-max=”2”\n"
"clone WebSiteClone WebSite\n"
"clone dlm-clone dlm \\\n"
"        meta interleave=&#34;true&#34;\n"
"clone gfs-clone gfs-control \\\n"
"        meta interleave=&#34;true&#34;\n"
"colocation WebFS-with-gfs-control inf: WebFSClone gfs-clone\n"
"colocation WebSite-with-WebFS inf: WebSiteClone WebFSClone\n"
"colocation fs_on_drbd inf: WebFSClone WebDataClone:Master\n"
"colocation gfs-with-dlm inf: gfs-clone dlm-clone\n"
"colocation website-with-ip inf: WebSiteClone WebIP\n"
"order WebFS-after-WebData inf: WebDataClone:promote WebFSClone:start\n"
"order WebSite-after-WebFS inf: WebFSClone WebSiteClone\n"
"order apache-after-ip inf: WebIP WebSiteClone\n"
"order start-WebFS-after-gfs-control inf: gfs-clone WebFSClone\n"
"order start-gfs-after-dlm inf: dlm-clone gfs-clone\n"
"property $id=&#34;cib-bootstrap-options&#34; \\\n"
"        dc-version=&#34;1.0.5-462f1569a43740667daf7b0f6b521742e9eb8fa7&#34; \\\n"
"        cluster-infrastructure=&#34;openais&#34; \\\n"
"        expected-quorum-votes=”2” \\\n"
"        <emphasis>stonith-enabled=&#34;true&#34;</emphasis> \\\n"
"        no-quorum-policy=&#34;ignore&#34;\n"
"rsc_defaults $id=&#34;rsc-options&#34; \\\n"
"        resource-stickiness=”100”\n"
""
msgstr ""

